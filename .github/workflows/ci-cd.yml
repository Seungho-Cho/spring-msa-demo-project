name: CI/CD Pipeline

on:
  push:
    paths:
      - 'services/inventory-service/**'
      - 'services/ui/**'
  pull_request:
    paths:
      - 'services/inventory-service/**'
      - 'services/ui/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service:
          - inventory-service
          - ui

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build and Test ${{ matrix.service }}
        run: |
          cd services/${{ matrix.service }}
          ../../gradlew clean build -x test

      - name: Deploy ${{ matrix.service }} to Kubernetes
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          scp -o StrictHostKeyChecking=no deploy/k8s-${{ matrix.service }}.yaml $EC2_USER@$EC2_HOST:/home/ubuntu/
          ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST "kubectl apply -f /home/ubuntu/k8s-${{ matrix.service }}.yaml"
